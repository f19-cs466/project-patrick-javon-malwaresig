# This is our code!
# This class will help us interact with the user and our YaraScanner class to scan files and identify 'malware'
# Date: 11/21/19
# Version 1.0
# Authors:
    # Patrick Sacchet
    # Javon Kitson

import sys
import os
import yara

from YaraScanner import *

def print_help():
    print("Here's how you run our code:")
    print("\tpython MalwareSig.py -arguments")
    print("Optional arguments you can add if you'd like:")
    print("\t-h - Print help message\n" +
    "\t-r - Pass rule files (requires malicious file(s) passed in addition)\n" +
    "\t-m - Malicious file(s) to be scanned (requires rule files passed in addition)\n" +
    "If no arguments are passed, program will scan test files with test rule files by default")

def print_usage():
    print("Invlalid call of MalwareSig.py, call as follows:")
    print("\tpython MalwareSig.py -arguments")
    print("Optional arguments:")
    print("\t-h - Print help message\n" +
    "\t-r - Pass rule files (requires malicious file(s) passed in addition)\n" +
    "\t-m - Malicious file(s) to be scanned (requires rule files passed in addition)\n" +
    "If no arguments are passed, program will scan test files with test rule files by default")

def parse_commands(args):
    if("-h" in args):
        print_help()
    elif("-r" in agrs):
        rule_ind = args.index('-r')
        rule_file_loc = args[rule_ind + 1]
        if(rule_file_loc == ""):
            print("Need to list a location for the rule file(s), exiting...")
            exit(0)


def main():
    parse_commands(sys.argv)




if __name__ == '__main__':
    main()
