# This is our code!
# This module will represent a YaraScanner object with its respective pieces of functionality (scanning, compiling rules etc.)
# Date: 11/21/19
# Version 1.0
# Authors:
    # Patrick Sacchet
    # Javon Kitson

import sys
import os
import yara

# Class will instantiate a YaraScanner object with a rule path and malicious file path as attributes
class YaraScanner:

    # Constructor for YaraScanner object
    def __init__(self, rule_path, mal_path):
        self.rule_path = rule_path
        self.mal_path = mal_path
        return

    # To string method for printing info of YaraScanner object
    def __str__(self):
        return ("Your rule path is: " + str(self.rule_path) + "\nYour mal_path is: " + str(self.mal_path))

    # Function will take the file path to the directory with rule files and create a dictionary so we can compile them
    # Input: rule_path - file path to the directory of rule files
    # Returns: rule_dict - dictionary of all rule files
    def make_dict(self):
        # Will take the directory containing all rule files and create a dictionary with the keys as the filenames, and values as their path values
        try:
            rule_dict = {}
            for file in os.listdir(self.rule_path):
                filepath = os.path.join(self.rule_path, file)
                rule_dict[file] = filepath
            return rule_dict
        except Exception as e:
            print("Directory for rule files is invalid, please try again")
            exit(0)
